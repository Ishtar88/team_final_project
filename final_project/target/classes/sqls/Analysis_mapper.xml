<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsr.project.analysis">

	<resultMap type="com.jsr.project.dtos.AnalysisDto" id="AnalysisDto">
		<result property="a_seq" column="A_SEQ" />
		<result property="a_code" column="A_CODE" />
		<result property="a_name" column="A_NAME" />
		<result property="a_img" column="A_IMG" />
		<result property="ma_seq" column="MA_SEQ" />
		<result property="id" column="ID" />
		<result property="ma_regDate" column="MA_REGDATE" />
	</resultMap>

	<resultMap type="com.jsr.project.dtos.SpendingDto" id="SpendingDto">
		<result property="p_regdate" column="P_REGDATE" />
		<result property="id" column="ID" />
		<result property="p_name" column="P_NAME" />
		<result property="p_money" column="P_MONEY" />
	</resultMap>

	<resultMap type="com.jsr.project.dtos.GoalDto" id="GoalDto">
		<result property="g_name" column="G_NAME" />
		<result property="g_money" column="G_MONEY" />
	</resultMap>

	<!-- 해당 월의 총 소비액 -->
	<select id="total_spending" parameterType="Map" resultType="Integer">
		SELECT SUM(P_MONEY) FROM SPENDING WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id}
	</select>
	<!-- 해당 월의 총 투자액 -->
	<select id="invest_spending" parameterType="Map" resultType="Integer">
		SELECT NVL(SUM(P_MONEY),0) FROM SPENDING WHERE
		P_DETAIL='투자' AND
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate}
		AND ID=#{id}
	</select>
	<!-- 해당 월의 총 지출액 -->
	<select id="expense_spending" parameterType="Map" resultType="Integer">
		SELECT DISTINCT((SELECT SUM(P_MONEY) FROM SPENDING
		WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id})-
		(SELECT NVL(SUM(P_MONEY),0) FROM SPENDING WHERE P_DETAIL='투자' AND
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id}))AS
		DATA FROM SPENDING
	</select>
	<!-- 해당 월의 투자 비율 -->
	<select id="invest_ratio" parameterType="Map" resultType="Integer">
		SELECT
		DISTINCT (SELECT NVL(SUM(P_MONEY),0) FROM
		SPENDING WHERE
		P_DETAIL='투자'
		AND
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate}
		AND ID=#{id})
		/(SELECT SUM(P_MONEY) FROM SPENDING WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id})AS
		DATA FROM SPENDING
	</select>
	<!-- 해당 월의 지출 비율 -->
	<select id="expense_ratio" parameterType="Map" resultType="Integer">
		SELECT DISTINCT(SELECT DISTINCT((SELECT SUM(P_MONEY)
		FROM SPENDING
		WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate}
		AND
		ID=#{id})-
		(SELECT NVL(SUM(P_MONEY),0) FROM SPENDING WHERE
		P_DETAIL='투자' AND
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate}
		AND
		ID=#{id}))FROM
		SPENDING)
		/(SELECT SUM(P_MONEY) FROM SPENDING WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id})AS
		DATA FROM SPENDING
	</select>

	<!-- 총예산 -->
	<select id="total_goal" parameterType="Map" resultType="Integer">
		SELECT
		SUM(G_MONEY)AS G_MONEY FROM GOAL WHERE ID=#{id}
	</select>

	<!-- 총지출액 -->
	<select id="total_expense" parameterType="Map" resultType="Integer">
		SELECT SUM(P_MONEY) FROM SPENDING WHERE
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate} AND ID=#{id}
	</select>

	<!-- 카테고리별 예산 -->
	<select id="category_goal" parameterType="Map" resultMap="GoalDto">
		SELECT
		G_NAME,SUM(G_MONEY)AS G_MONEY FROM (SELECT
		ID,G_NAME,G_MONEY FROM GOAL
		WHERE
		ID=#{id}) GROUP BY G_NAME
	</select>

	<!-- 카테고리별 지출 -->
	<select id="category_expense" parameterType="Map" resultMap="SpendingDto">
		SELECT P_NAME,SUM(P_MONEY)AS P_MONEY FROM (SELECT
		ID,P_NAME,P_MONEY
		FROM SPENDING
		WHERE ID=#{id} AND
		SUBSTR(TO_CHAR(P_REGDATE,'YYYY-MM'),1,7)=#{p_regdate})
		GROUP BY P_NAME
	</select>

	<!-- 카테고리별 목표 달성률 -->



	<!--          -->
	<!-- 전병훈 작업 -->
	<!--          -->

	<!-- 당월 투자금액 조회 -->
	<select id="acountMonthMoney" parameterType="AcountPatternDto" resultType="AcountDto">
		SELECT SUM(A_SUM) AS AC_MONEY
		FROM (SELECT DISTINCT SUM(ST_SUM) OVER(PARTITION BY ID) AS A_SUM,ID FROM (SELECT ST_COUNT*ST_ADD AS ST_SUM, ID,ST_COUNT,ST_MONEY,ST_SEQ FROM STOCK WHERE ID=#{id} AND TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name})
				UNION
				SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS A_SUM,ID FROM FUND WHERE ID=#{id} AND TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name}
				UNION
				SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS A_SUM,ID FROM SAVE WHERE ID=#{id} AND TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name})
	</select>

	<!-- 투자 비율 차트 조회 -->
	<select id="acountTotalRate" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT DISTINCT SUM(ST_MONEY*ST_COUNT) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'STOCK' FROM DUAL) AS NAME FROM (SELECT ST_MONEY,ID,ST_COUNT FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N')
		UNION
		SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'FUND' FROM DUAL) AS NAME FROM (SELECT F_ADD,ID,F_ENDABLE FROM FUND WHERE ID=#{id} AND F_ENDABLE='N')
		UNION
		SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'SAVE' FROM DUAL) AS NAME FROM (SELECT S_ADD,ID,S_ENDABLE FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N')
	</select>
	
	<!-- 투자 분류 내역 조회 -->
	<select id="acountTotalDetailAjax" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT MONEY,ID,DETAIL,NAME,RATE,RE
		FROM (SELECT (ST_MONEY*ST_COUNT) AS MONEY,((ST_MONEY*ST_COUNT)/(SELECT (ST_SUM+F_SUM+S_SUM) AS AC_MONEY
																			FROM (SELECT DISTINCT SUM(ST_SUM) OVER(PARTITION BY ID) AS ST_SUM,ID FROM (SELECT ST_COUNT*ST_ADD AS ST_SUM, ID,ST_COUNT,ST_MONEY,ST_SEQ FROM STOCK WHERE ID=#{id})) ST 
																				  JOIN (SELECT F_SUM,S_SUM,F.ID FROM (SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS F_SUM,ID FROM FUND WHERE ID=#{id}) F JOIN (SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS S_SUM,ID FROM SAVE WHERE ID=#{id}) S
																				  ON F.ID=S.ID) SF 
																			ON SF.ID=ST.ID)) AS RATE,((1-(ST_ADD/ST_MONEY))*100) AS RE
					,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N'
				UNION
				SELECT S_ADD AS MONEY,(S_ADD/(SELECT (ST_SUM+F_SUM+S_SUM) AS AC_MONEY
										    	FROM (SELECT DISTINCT SUM(ST_SUM) OVER(PARTITION BY ID) AS ST_SUM,ID FROM (SELECT ST_COUNT*ST_ADD AS ST_SUM, ID,ST_COUNT,ST_MONEY,ST_SEQ FROM STOCK WHERE ID=#{id})) ST 
										        JOIN (SELECT F_SUM,S_SUM,F.ID FROM (SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS F_SUM,ID FROM FUND WHERE ID=#{id}) F JOIN (SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS S_SUM,ID FROM SAVE WHERE ID=#{id}) S
													  ON F.ID=S.ID) SF 
												ON SF.ID=ST.ID)) AS RATE,S_TAX AS RE
				,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N'
				UNION
				SELECT F_ADD AS MONEY,(F_ADD/(SELECT (ST_SUM+F_SUM+S_SUM) AS AC_MONEY
												FROM (SELECT DISTINCT SUM(ST_SUM) OVER(PARTITION BY ID) AS ST_SUM,ID FROM (SELECT ST_COUNT*ST_ADD AS ST_SUM, ID,ST_COUNT,ST_MONEY,ST_SEQ FROM STOCK WHERE ID=#{id})) ST 
											    JOIN (SELECT F_SUM,S_SUM,F.ID FROM (SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS F_SUM,ID FROM FUND WHERE ID=#{id}) F JOIN (SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS S_SUM,ID FROM SAVE WHERE ID=#{id}) S
													  ON F.ID=S.ID) SF 
												ON SF.ID=ST.ID)) AS RATE,((1-(F_ADD/F_MONEY))*100) AS RE
				,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME FROM FUND WHERE ID=#{id} AND F_ENDABLE='N' ORDER BY MONEY DESC) 
		ORDER BY NAME DESC
	</select>
	
	<!-- 당월 투자 분류 내역 조회 -->
	<select id="currentAcountDetail" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT NAME,MONEY,RE,RATE,ABLE AS DETAIL
		FROM(SELECT (SELECT 'STOCK' FROM DUAL) AS NAME,(ST_MONEY*ST_COUNT) AS MONEY,(ST_ADD/ST_MONEY) AS RATE
				,( (ST_MONEY*ST_COUNT)/(SELECT SUM(A_SUM) 
										FROM (SELECT SUM(ST_MONEY*ST_COUNT) AS A_SUM FROM STOCK WHERE ID=#{id} AND TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name}
												UNION
												SELECT SUM(S_MONEY) FROM SAVE WHERE ID=#{id} AND TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name}
												UNION
												SELECT NVL(SUM(F_MONEY),0) FROM FUND WHERE ID=#{id} AND TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name})) ) AS RE
				, ST_SELLABLE AS ABLE FROM STOCK WHERE TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name}
				UNION
				SELECT (SELECT 'SAVE' FROM DUAL) AS NAME,S_MONEY AS MONEY,S_ADD AS RATE
				,(S_MONEY/(SELECT SUM(A_SUM) 
										FROM (SELECT SUM(ST_MONEY*ST_COUNT) AS A_SUM FROM STOCK WHERE ID=#{id} AND TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name}
												UNION
												SELECT SUM(S_MONEY) FROM SAVE WHERE ID=#{id} AND TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name}
												UNION
												SELECT NVL(SUM(F_MONEY),0) FROM FUND WHERE ID=#{id} AND TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name})) ) AS RE
				,S_ENDABLE FROM SAVE WHERE TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name}
				UNION
				SELECT (SELECT 'FUND' FROM DUAL) AS NAME,F_MONEY AS MONEY,(F_ADD/F_MONEY) AS RATE
				,((F_ADD/F_MONEY)/(SELECT SUM(A_SUM) 
										FROM (SELECT SUM(ST_MONEY*ST_COUNT) AS A_SUM FROM STOCK WHERE ID=#{id} AND TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name}
												UNION
												SELECT SUM(S_MONEY) FROM SAVE WHERE ID=#{id} AND TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name}
												UNION
												SELECT NVL(SUM(F_MONEY),0) FROM FUND WHERE ID=#{id} AND TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name})) ) AS RE
				,F_ENDABLE FROM FUND WHERE TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name})
	</select>
	
	<!-- 1년중 가장 높은 수익 조회 -->
	<select id="yearMoneyTop" parameterType="AcountPatternDto" resultType="SaveDto">
		SELECT ROWNUM AS RN, S_TAX,S_ENDDATE
		FROM (SELECT S_TAX,S_ENDDATE
				FROM (SELECT ROWNUM,MAX(S_TAX) OVER(PARTITION BY ID) AS S_TAX,S_ENDDATE 
						FROM SAVE 
						WHERE ID=#{id} AND TO_DATE(TO_CHAR(S_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
				ORDER BY S_ENDDATE DESC)
		UNION
		SELECT S_TAX,S_ENDDATE
				FROM (SELECT ROWNUM,MAX(ST_ADD/ST_MONEY) OVER(PARTITION BY ID) AS S_TAX,ST_SELLDATE AS S_ENDDATE 
						FROM STOCK
						WHERE ID=#{id} AND TO_DATE(TO_CHAR(ST_SELLDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
				ORDER BY ST_SELLDATE DESC)
		UNION
		SELECT S_TAX,S_ENDDATE
				FROM (SELECT ROWNUM,MAX(F_ADD/F_MONEY) OVER(PARTITION BY ID) AS S_TAX,F_ENDDATE AS S_ENDDATE 
						FROM FUND
						WHERE ID=#{id} AND TO_DATE(TO_CHAR(F_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
				ORDER BY F_ENDDATE DESC))
		WHERE ROWNUM=1
	</select>
	
	<!-- 투자 금액 top5 조회 -->
	<select id="acountMoneyTop" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		<![CDATA[
			SELECT RN,MONEY,ID,DETAIL,NAME
			FROM (SELECT ROWNUM AS RN,MONEY,ID,DETAIL,NAME FROM (SELECT (ST_MONEY*ST_COUNT) AS MONEY,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N'
							UNION
							SELECT S_ADD AS MONEY,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N'
							UNION
							SELECT F_ADD AS MONEY,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME FROM FUND WHERE ID=#{id} AND F_ENDABLE='N' ORDER BY MONEY DESC) ORDER BY MONEY DESC) 
			WHERE ROWNUM<=5
		]]>
	</select>
	
	<!-- 연간 투자 금액 top5 조회 -->
	<select id="yearAcountMoneyTop" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		<![CDATA[
			SELECT RN,MONEY,ID,DETAIL,NAME
			FROM (SELECT ROWNUM AS RN,MONEY,ID,DETAIL,NAME
					FROM (SELECT (ST_MONEY*ST_COUNT) AS MONEY,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N' AND TO_DATE(TO_CHAR(ST_SELLDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
					UNION
					SELECT S_ADD AS MONEY,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N'AND TO_DATE(TO_CHAR(S_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
					UNION
					SELECT F_ADD AS MONEY,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME FROM FUND WHERE ID=#{id} AND F_ENDABLE='N' AND TO_DATE(TO_CHAR(F_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6)
					ORDER BY MONEY DESC) ORDER BY MONEY DESC) 
			WHERE ROWNUM<=5
		]]>
	</select>
	
	<!-- 투자 수익률 TOP5 -->
	<select id="acountRateTop5" parameterType="acountPatternDto" resultType="acountPatternDto">
		<![CDATA[
			SELECT RN,RATE,NAME,DETAIL,MONEY
			FROM (SELECT ROWNUM AS RN,RATE,DETAIL,NAME,A_MONEY AS MONEY FROM (SELECT (ST_ADD/ST_MONEY) AS RATE,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME,ST_MONEY*ST_COUNT AS A_MONEY FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='Y'
																UNION
																SELECT S_TAX AS RATE,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME,S_MONEY FROM SAVE WHERE ID=#{id} AND S_ENDABLE='Y'
																UNION
																SELECT (F_ADD/F_MONEY) AS RATE,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME,F_MONEY FROM FUND WHERE ID=#{id} AND F_ENDABLE='Y' ORDER BY RATE DESC)
					ORDER BY RATE DESC)
			WHERE ROWNUM<=5
		]]>
	</select>
	
	<!-- 기간별 수익 차트 조회 -->
	<select id="saveDateChartAjax" parameterType="AcountPatternDto" resultType="SaveDto">
		SELECT DISTINCT SUM(S_TAX) OVER(PARTITION BY S_ENDDATE) AS S_TAX,S_ENDDATE,S_NAME 
		FROM (SELECT S_ENDDATE,S_TAX,S_NAME 
				FROM SAVE 
				WHERE ID=#{id} AND S_ENDABLE='Y' AND TO_DATE(TO_CHAR(S_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6))
	</select>
	
	<select id="stockDateChartAjax" parameterType="AcountPatternDto" resultType="StockDto">
		SELECT DISTINCT SUM(ST_INTER) OVER(PARTITION BY ST_SELLDATE) AS ST_INTER,ST_SELLDATE,ST_NAME 
		FROM (SELECT ST_SELLDATE,(ST_ADD/ST_MONEY) AS ST_INTER,ST_NAME 
				FROM STOCK  
				WHERE ID=#{id} AND ST_SELLABLE='Y' AND TO_DATE(TO_CHAR(ST_SELLDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6))
	</select>
	
	<select id="fundDateChartAjax" parameterType="AcountPatternDto" resultType="FundDto">
		SELECT DISTINCT SUM(F_INTER) OVER(PARTITION BY F_ENDDATE) AS F_INTER,F_ENDDATE,F_NAME 
		FROM (SELECT F_ENDDATE,(F_ADD/F_MONEY) AS F_INTER,F_NAME 
				FROM FUND
				WHERE ID=#{id} AND F_ENDABLE='Y' AND TO_DATE(TO_CHAR(F_ENDDATE,'YYYY-MM'),'YYYY-MM') BETWEEN ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),-6) AND ADD_MONTHS(TO_DATE(#{name},'YYYY-MM'),+6))
	</select>
	
	<!-- 투자별 수익 현황 -->
	<select id="acountDetailChart" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT RN,RATE,NAME,DETAIL
		FROM (SELECT ROWNUM AS RN,RATE,DETAIL,NAME FROM (SELECT (ST_ADD/ST_MONEY) AS RATE,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='Y'
															UNION
															SELECT S_TAX AS RATE,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME FROM SAVE WHERE ID=#{id} AND S_ENDABLE='Y'
															UNION
															SELECT (F_ADD/F_MONEY) AS RATE,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME FROM FUND WHERE ID=#{id} AND F_ENDABLE='Y' ORDER BY RATE DESC)
		ORDER BY RATE DESC)
		
	</select>
	
	<!-- 가장 높은 수익 상품 조회 -->
	<select id="yearProductTop" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT ROWNUM AS RN,INTER AS RATE,NAME,DETAIL
		FROM (SELECT INTER,NAME,DETAIL 
				FROM (SELECT DISTINCT MAX(ST_INTER) OVER(PARTITION BY ST_INTER) AS INTER,ST_NAME AS DETAIL,(SELECT 'STOCK' AS NAME FROM DUAL) AS NAME FROM (SELECT DISTINCT ST_ADD/ST_MONEY AS ST_INTER,ST_NAME FROM STOCK WHERE ID=#{id} ORDER BY (ST_ADD/ST_MONEY ) DESC))
				UNION
				SELECT INTER,NAME,DETAIL 
				FROM (SELECT DISTINCT MAX(S_TAX) OVER(PARTITION BY S_TAX) AS INTER,S_NAME AS DETAIL,(SELECT 'SAVE' AS NAME FROM DUAL) AS NAME FROM (SELECT DISTINCT S_TAX,S_NAME FROM SAVE WHERE ID=#{id} ORDER BY (S_TAX) DESC))
				UNION
				SELECT INTER,NAME,DETAIL 
				FROM (SELECT DISTINCT MAX(F_INTER) OVER(PARTITION BY F_INTER) AS INTER,F_NAME AS DETAIL,(SELECT 'FUND' AS NAME FROM DUAL) AS NAME 
						FROM (SELECT DISTINCT F_ADD/F_MONEY AS F_INTER,F_NAME 
								FROM FUND WHERE ID=#{id} ORDER BY F_INTER DESC))
				ORDER BY INTER DESC)
		WHERE ROWNUM=1
	</select>
	
	<!-- 가장 많이 투자하고 있는 상품 조회 -->
	<select id="acountMaxValueProduct" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT RN,NAME,DETAIL,MONEY FROM (SELECT NAME,DETAIL,MONEY,ROWNUM AS RN FROM (SELECT (SELECT 'STOCK' FROM DUAL) AS NAME,ST_NAME AS DETAIL,ST_COUNT*ST_MONEY AS MONEY FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N'
				UNION
				SELECT (SELECT 'SAVE' FROM DUAL) AS NAME,S_NAME AS DETAIL,S_ADD AS MONEY FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N'
				UNION
				SELECT (SELECT 'FUND' FROM DUAL) AS NAME,F_NAME AS DETAIL,F_MONEY AS MONEY FROM FUND WHERE ID=#{id} AND F_ENDABLE='N' ORDER BY MONEY DESC))
		WHERE RN=1
	</select>
	
	<!-- 투자 수익률 차트 조회 -->
	<select id="acountMaxValueChart" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT RN,RATE,NAME,DETAIL
		FROM (SELECT ROWNUM AS RN,RATE,DETAIL,NAME FROM (SELECT (ST_ADD/ST_MONEY) AS RATE,ID,ST_NAME AS DETAIL,(SELECT 'STOCK' FROM DUAL) AS NAME FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='Y'
															UNION
															SELECT S_TAX AS RATE,ID,S_NAME AS DETAIL,(SELECT 'SAVE' FROM DUAL) AS NAME FROM SAVE WHERE ID=#{id} AND S_ENDABLE='Y'
															UNION
															SELECT (F_ADD/F_MONEY) AS RATE,ID,F_NAME AS DETAIL,(SELECT 'FUND' FROM DUAL) AS NAME FROM FUND WHERE ID=#{id} AND F_ENDABLE='Y' ORDER BY RATE DESC)
		ORDER BY RATE DESC)
	</select>
	
	<!-- 당월 투자 비율 차트 -->
	<select id="CurrentAcountTotalChart" parameterType="AcountPatternDto" resultType="AcountPatternDto">
		SELECT DISTINCT SUM(ST_MONEY*ST_COUNT) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'STOCK' FROM DUAL) AS NAME FROM (SELECT ST_MONEY,ID,ST_COUNT FROM STOCK WHERE ID=#{id} AND ST_SELLABLE='N' AND TO_CHAR(ST_BUYDATE,'YYYY-MM')=#{name})
		UNION
		SELECT DISTINCT SUM(F_ADD) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'FUND' FROM DUAL) AS NAME FROM (SELECT F_ADD,ID,F_ENDABLE FROM FUND WHERE ID=#{id} AND F_ENDABLE='N' AND TO_CHAR(F_BUYDATE,'YYYY-MM')=#{name})
		UNION
		SELECT DISTINCT SUM(S_ADD) OVER(PARTITION BY ID) AS MONEY,ID,(SELECT 'SAVE' FROM DUAL) AS NAME FROM (SELECT S_ADD,ID,S_ENDABLE FROM SAVE WHERE ID=#{id} AND S_ENDABLE='N' AND TO_CHAR(S_STARTDATE,'YYYY-MM')=#{name})
	</select>

</mapper>